

interface ParameterDeclaration {
  readonly name: string
  readonly description: string
}

interface Parameter extends ParameterDeclaration {
  readonly value: string
}

interface OperationDeclaration {
  readonly name: string
  readonly description: string
  readonly parameters: ParameterDeclaration[]
  readonly factories: (ProjectBasedViewFactory<View> | DirectoryBasedViewFactory<View> | FileBasedViewFactory<View>)[]
}

interface Extension{
  readonly name: string
  readonly description: string
  readonly operations: OperationDeclaration[]//declare ahead of time what operations are available on the views returned by below
}

interface TreeLike {
  nodeType: string[]
  nodeName: string
  childNodeNames: string[]
  childrenNamed(fieldName: string): View[]
}

//view types that should be in Core.ts
interface View {
}

class ProjectView implements View{

}
class DirectoryView implements View{

}

class FileView implements View {

}



//end view types

interface DirectoryBasedViewFactory<V extends View> {
  newDirectoryBasedView(dir: DirectoryView) : V
}

interface ProjectBasedViewFactory<V extends View> {
  newProjectBasedView(project: ProjectView) : V
}

interface FileBasedViewFactory<V extends View> {
  newFileBasedView(file: FileView) : V
}

class ClojureView implements View {
  constructor(readonly project: ProjectView) {

  }
  renamePackage(oldPackage: string, newPackage: string) : void {

  }
}

let clojureProjectViewFactory: ProjectBasedViewFactory<ClojureView> = {
  newProjectBasedView: function(project: ProjectView){
    return new ClojureView(project)
  }
}


let clojureProject: Extension = {
  name: "ClojureProject",
  description: "Perform operations on a Clojure Project",
  operations: [{
      name: "renamePackage",
      description: "Renames a package in a Clojure project",
      factories: [clojureProjectViewFactory],
      parameters: [{
        name: "oldPackage",
        description: "The old package name",
      },{
        name: "newPackage",
        description: "The new package name"
      }
    ]
  }
]}
